{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","title","classNames","href","onClick","handleTabChange","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"+OAYaA,EAAwB,SAACC,GACpC,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,cACAC,EACEH,EADFG,cAGIC,EAAmBH,EAAKI,MAC5B,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MACfD,EAAK,GAQV,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBACE,UAAQ,MAERF,UAAWG,IACT,YACA,CACE,YAAaJ,IAAOH,EAAYG,KANtC,SAUE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRC,UAAU,aACVK,QAAS,kBA5BD,SAACP,GACnBA,EAAIC,KAAOL,GACbC,EAAcG,GA0BaQ,CAAgBR,IAJjC,SAMGI,KAdEH,UAsBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACE,8BACGJ,EAAYW,gBCtDVd,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAAS,SAAnD,mBAAOf,EAAP,KAAsBgB,EAAtB,KAEMd,EAAcH,EAAKI,MACvB,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MACfD,EAAK,GAMV,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYM,SAGlC,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EACfC,cAbgB,SAACG,GACrBY,EAAiBZ,EAAIC,WCpBzBY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f8e1e9e1.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nimport './Tabs.scss';\n\nimport Tab from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  } = props;\n\n  const selectedTab: Tab = tabs.find(\n    tab => tab.id === selectedTabId,\n  ) || tabs[0];\n\n  const handleTabChange = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={id}\n                className={classNames(\n                  'tabs__tab',\n                  {\n                    'is-active': id === selectedTab.id,\n                  },\n                )}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  className=\"tabs__link\"\n                  onClick={() => handleTabChange(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        <div>\n          {selectedTab.content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport Tab from './types/Tab';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const selectedTab = tabs.find(\n    tab => tab.id === selectedTabId,\n  ) || tabs[0];\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}